/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.1 at Thu Nov 13 13:17:25 2014. */

#ifndef PB_FILETRANSFER_PB_H_INCLUDED
#define PB_FILETRANSFER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _FileMessage {
    pb_callback_t device_id;
    bool has_unix_time;
    int32_t unix_time;
    pb_callback_t data;
    bool has_position;
    int64_t position;
    pb_callback_t fileid;
} FileMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define FileMessage_init_default                 {{{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}
#define FileMessage_init_zero                    {{{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define FileMessage_device_id_tag                1
#define FileMessage_unix_time_tag                2
#define FileMessage_data_tag                     3
#define FileMessage_position_tag                 4
#define FileMessage_fileid_tag                   5

/* Struct field encoding specification for nanopb */
extern const pb_field_t FileMessage_fields[6];

/* Maximum encoded size of messages (where known) */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
