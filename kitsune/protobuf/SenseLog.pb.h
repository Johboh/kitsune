/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.1 at Mon Nov  3 16:52:50 2014. */

#ifndef PB_SENSELOG_PB_H_INCLUDED
#define PB_SENSELOG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _SenseLog {
    bool has_unix_time;
    int32_t unix_time;
    pb_callback_t device_id;
    pb_callback_t text;
} SenseLog;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SenseLog_init_default                    {false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define SenseLog_init_zero                       {false, 0, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define SenseLog_unix_time_tag                   1
#define SenseLog_device_id_tag                   2
#define SenseLog_text_tag                        3

/* Struct field encoding specification for nanopb */
extern const pb_field_t SenseLog_fields[4];

/* Maximum encoded size of messages (where known) */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
